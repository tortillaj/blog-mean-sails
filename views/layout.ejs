<!DOCTYPE html>
<html ng-app="Blog">
  <head>
    <title>Blog</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `link` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' boilerplate asset management.

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically.  Both CSS (.css) and LESS (.less) are supported.
        In production, your styles will be minified and concatenated into a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/bower_components/angular-growl/build/angular-growl.min.css">
    <link rel="stylesheet" href="/linker/bower_components/ng-tags-input/ng-tags-input.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap-theme.css">
    <!--STYLES END-->
  </head>

  <body ng-cloak>
    <div class="ui one column page grid">
        <div class="column">

          <!-- Header -->
          <h2 class="ui huge center aligned icon header">
            <a href="/" id="logo"><i class="circular emphasized inverted teal book outline icon"></i></a>
            <div class="content">
              Read Me
              <div class="sub header">Welcome! Please find below some fantastic posts.</div>
            </div>
          </h2>

          <!-- Main navigation -->
          <div class="ui secondary pointing menu" ng-controller="NavCtrl">
            <a class="item" href="/">
              <i class="home icon"></i> Home
            </a>
            <a class="item" ng-show="isAuthenticated" href="/post/create">
              <i class="file icon"></i> New Post
            </a>
            <div class="right menu">
              <div class="item">
                <div class="ui icon input">
                  <input type="text" id="search-input" ng-model="searchQuery" placeholder="Search for...">
                  <i class="search link icon" ng-click="search()"></i>
                </div>
              </div>
              <a ng-hide="isAuthenticated" class="ui item" ng-click="open()">
                <i class="lock icon"></i> Login</a>
              <a class="ui item" ng-show="isAuthenticated" ng-click="logout()">
                <i class="unlock icon"></i> Logout
              </a>
            </div>
          </div>
        </div>

        <!-- Main view -->
        <div class="ui column" ng-view></div>

      </div>

      <!-- Growl notification system -->
      <div growl></div>



    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/linker/bower_components/jquery/dist/jquery.js"></script>
    <script src="/linker/bower_components/moment/moment.js"></script>
    <script src="/linker/bower_components/angular/angular.js"></script>
    <script src="/linker/bower_components/angular-bootstrap/ui-bootstrap.js"></script>
    <script src="/linker/bower_components/angular-bootstrap/ui-bootstrap-tpls.js"></script>
    <script src="/linker/bower_components/angular-growl/build/angular-growl.js"></script>
    <script src="/linker/bower_components/angular-moment/angular-moment.js"></script>
    <script src="/linker/bower_components/angular-resource/angular-resource.js"></script>
    <script src="/linker/bower_components/angular-route/angular-route.js"></script>
    <script src="/linker/bower_components/angular-sanitize/angular-sanitize.js"></script>
    <script src="/linker/bower_components/ng-tags-input/ng-tags-input.js"></script>
    <script src="/linker/bower_components/showdown/src/showdown.js"></script>
    <script src="/linker/bower_components/truncate/jquery.truncate.js"></script>
    <script src="/linker/app/app.js"></script>
    <script src="/linker/app/controllers/NavCtrl.js"></script>
    <script src="/linker/app/controllers/PostIndexCtrl.js"></script>
    <script src="/linker/app/controllers/PostShowCtrl.js"></script>
    <script src="/linker/app/directives.js"></script>
    <script src="/linker/app/filters.js"></script>
    <script src="/linker/app/services.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
